using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Vintagestory.API.Common;
using WearAndTear.Config.Props;

namespace WearAndTear.Config
{
    public class AutoPartRegistryConfig
    {
        /// <summary>
        /// Wether parts should be automatically identified and registered.
        /// (if set to false you will only get parts generated by the Feature Flags, such as windmills)
        /// </summary>
        public bool Enabled { get; set; } = true;

        /// <summary>
        /// Wether or not fruit press should be included
        /// (This technically isn't a mechanically powdered block hence it requires an extra check)
        /// (This works best with vannilla variants as it adds actual metal variants of the block)
        /// </summary>
        public bool IncludeFruitPress { get; set; } = true;

        /// <summary>
        /// Any mod specified in here won't be affected by auto part registry
        /// </summary>
        public string[] ModBlacklist { get; set; } = new string[] 
        {
            "medievalexpansion" //Has it's own durability mechanics //TODO maybe add an option to overwrite medieval expansions own durability system?
        };

        /// <summary>
        /// Any block with matching code in here won't be affected by auto part registry
        /// </summary>
        public string[] CodeBlacklist { get; set; } = Array.Empty<string>();

        /// <summary>
        /// The minimal percentage the composition of metal ingredients is required for that metal to be the primary metal
        /// </summary>
        public float MinimalMetalCompositionPercentage { get; set;} = 0.8f;

        public Dictionary<EnumBlockMaterial, WearAndTearPartProps> DefaultFrameProps { get; set; } = new()
        {
            { 
                EnumBlockMaterial.Wood,
                new()
                {
                    Name = "Frame (Wood)",
                    AvgLifeSpanInYears = 1,
                    RepairType = "wood",
                    IsCritical = true,
                    MaintenanceLimit = .4f,
                    Decay = new WearAndTearDecayProps[]
                    {
                        new() 
                        {
                            Type = "humidity"
                        },
                        new() 
                        {
                            Type = "time"
                        }
                    }
                }
            }
        };

        public Dictionary<EnumBlockMaterial, WearAndTearProtectivePartConfig[]> DefaultProtectivePartProps { get; set; } = new()
        {
            { 
                EnumBlockMaterial.Wood,
                new WearAndTearProtectivePartConfig[]
                {
                    new()
                    {
                        PartProps = new()
                        {
                            Name = "Wax",
                            AvgLifeSpanInYears = 1,
                            RepairType = "wax",
                            Decay = new WearAndTearDecayProps[]
                            {
                                new() 
                                {
                                    Type = "humidity"
                                },
                                new() 
                                {
                                    Type = "time"
                                }
                            }
                        },
                        ProtectiveProps = new()
                        {
                            EffectiveFor = new WearAndTearProtectiveTargetProps[]
                            {
                                new()
                                {
                                    RepairType = "wood"
                                }
                            }
                        }
                    }
                }
            }
        };

        public WearAndTearProtectivePartConfig MetalReinforcementTemplate { get; set; } = new()
        {
            //TODO implement scrap materials that will drop on destruction due to other parts failing (scrap metal, scrap wood, etc)
            PartProps = new()
            {
                Name = "Metal Reinforcement (*)",
                AvgLifeSpanInYears = 4,
                IsCritical = true,
                RepairType = "metal-*",
                MaintenanceLimit = .2f,
                Decay = new WearAndTearDecayProps[]
                {
                    new()
                    {
                        Type = "time"
                    }
                },
            },
            ProtectiveProps = new WearAndTearProtectivePartProps
            {
                EffectiveFor = new WearAndTearProtectiveTargetProps[]
                {
                    new()
                    {
                        RepairType = "wood"
                        //Decay modifier is metal dependant
                    }
                }
            }
        };

        public Dictionary<string, MetalReinforcementConfig> MetalConfig { get; set; } = new()
        {
            { 
                "default",
                new()
            },
            { 
                "copper",
                new()
            },
            { 
                "tinbronze",
                new()
                {
                    DecayMultiplier = 0.9f,
                    AvgLifeSpanInYears = 3f
                }
            },
            { 
                "bismuthbronze",
                new()
                {
                    DecayMultiplier = 0.85f,
                    AvgLifeSpanInYears = 3.3f
                }
            },
            { 
                "blackbronze",
                new()
                {
                    DecayMultiplier = 0.8f,
                    AvgLifeSpanInYears = 3.6f
                }
            },
            { 
                "iron",
                new()
                {
                    DecayMultiplier = 0.7f,
                    AvgLifeSpanInYears = 4f
                }
            },
            { 
                "meteoriciron",
                new()
                {
                    DecayMultiplier = 0.6f,
                    AvgLifeSpanInYears = 4.5f
                }
            },
            {
                "steel",
                new()
                {
                    //Not entirely realistic but it promotes making variants of better metals
                    DecayMultiplier = 0.5f,
                    AvgLifeSpanInYears = 5f
                }
            }
        };
    }
}
