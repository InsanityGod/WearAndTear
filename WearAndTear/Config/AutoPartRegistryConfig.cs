using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Vintagestory.API.Common;
using WearAndTear.Config.Props;

namespace WearAndTear.Config
{
    public class AutoPartRegistryConfig
    {
        /// <summary>
        /// Wether parts should be automatically identified and registered.
        /// (if set to false you will only get parts generated by the Feature Flags, such as windmills)
        /// </summary>
        [DefaultValue(true)]
        public bool Enabled { get; set; } = true;

        /// <summary>
        /// Wether or not fruit press should be included
        /// (This technically isn't a mechanically powdered block hence it requires an extra check)
        /// (This works best with vannilla variants as it adds actual metal variants of the block)
        /// </summary>
        [DefaultValue(true)]
        public bool IncludeFruitPress { get; set; } = true;

        /// <summary>
        /// Any mod specified in here won't be affected by auto part registry
        /// </summary>
        public string[] ModBlacklist { get; set; } = new string[]
        {
            "medievalexpansion" //Has it's own durability mechanics //TODO maybe add an option to overwrite medieval expansions own durability system?
        };

        /// <summary>
        /// Any block with matching code in here won't be affected by auto part registry
        /// </summary>
        public string[] CodeBlacklist { get; set; } = new string[]
        {
            "mixingbowlmini" //Because they defined this as Wood for some reason -_-
        };

        /// <summary>
        /// The minimal percentage the composition of metal ingredients is required for that metal to be the primary metal
        /// </summary>
        [Range(0, 1)]
        [DefaultValue(.8f)]
        [DisplayFormat(DataFormatString = "P")]
        public float MinimalMetalCompositionPercentage { get; set; } = .8f;
        
        /// <summary>
        /// The minimal percentage the composition of wood ingredients is required for that wood to be the primary wood type
        /// </summary>
        [Range(0, 1)]
        [DefaultValue(.8f)]
        [DisplayFormat(DataFormatString = "P")]
        public float MinimalWoodCompositionPercentage { get; set; } = .8f;

        /// <summary>
        /// Wether all recipes have to contain metal for it to apply metal reinforcement
        /// </summary>
        [DefaultValue(false)]
        public bool RequireAllRecipesToContainMetal { get; set; } = false;

        /// <summary>
        /// The default parts to use for each BlockMaterial
        /// </summary>
        public Dictionary<EnumBlockMaterial, WearAndTearPartProps> DefaultFrameProps { get; set; } = new()
        {
            {
                EnumBlockMaterial.Wood,
                new()
                {
                    Code = "wearandtear:frame",
                    MaterialVariant = "wearandtear:wood",
                    AvgLifeSpanInYears = 1,
                    RepairType = "wood",
                    IsCritical = true,
                    MaintenanceLimit = .4f,
                    ScrapCode = "wearandtear:woodscrap-*",
                    Decay = new WearAndTearDecayProps[]
                    {
                        new()
                        {
                            Type = "humidity"
                        },
                        new()
                        {
                            Type = "time"
                        }
                    }
                }
            },
            {
                EnumBlockMaterial.Ceramic,
                new()
                {
                    Code = "wearandtear:frame",
                    MaterialVariant = "wearandtear:ceramic",
                    AvgLifeSpanInYears = 1,
                    RepairType = "ceramic",
                    IsCritical = true,
                    MaintenanceLimit = .4f,
                    ScrapCode = "wearandtear:woodscrap-*",
                    Decay = new WearAndTearDecayProps[]
                    {
                        new()
                        {
                            Type = "time"
                        }
                    }
                }
            }
        };

        /// <summary>
        /// The default protective parts to use for each BlockMaterial
        /// </summary>
        public Dictionary<EnumBlockMaterial, WearAndTearProtectivePartConfig[]> DefaultProtectivePartProps { get; set; } = new()
        {
            {
                EnumBlockMaterial.Wood,
                new WearAndTearProtectivePartConfig[]
                {
                    new()
                    {
                        PartProps = new()
                        {
                            Code = "wearandtear:wax",
                            AvgLifeSpanInYears = 1,
                            RepairType = "wax",
                            Decay = new WearAndTearDecayProps[]
                            {
                                new()
                                {
                                    Type = "humidity"
                                },
                                new()
                                {
                                    Type = "time"
                                }
                            }
                        },
                        ProtectiveProps = new()
                        {
                            EffectiveFor = new WearAndTearProtectiveTargetProps[]
                            {
                                new()
                                {
                                    RepairType = "wood"
                                }
                            }
                        }
                    }
                }
            }
        };

        /// <summary>
        /// This is the template used for generating metal reinforcement parts
        /// </summary>
        public WearAndTearProtectivePartConfig MetalReinforcementTemplate { get; set; } = new()
        {
            PartProps = new()
            {
                Code = "wearandtear:reinforcement",
                AvgLifeSpanInYears = 4,
                IsCritical = true,
                RepairType = "metal",
                MaintenanceLimit = .2f,
                ScrapCode = "wearandtear:metalscrap-*",
                Decay = new WearAndTearDecayProps[]
                {
                    new()
                    {
                        Type = "time"
                    }
                },
            },
            ProtectiveProps = new WearAndTearProtectivePartProps
            {
                EffectiveFor = new WearAndTearProtectiveTargetProps[]
                {
                    new()
                    {
                        RepairType = "wood"
                        //Decay modifier is metal dependant
                    },
                    new()
                    {
                        RepairType = "ceramic"
                        //Decay modifier is metal dependant
                    }
                }
            }
        };

        /// <summary>
        /// The configuration for each metal (this information is used to fill the Metal Reinforcement Template)
        /// </summary>
        public Dictionary<string, MetalReinforcementConfig> MetalConfig { get; set; } = new()
        {
            {
                "default",
                new()
            },
            {
                "copper",
                new()
            },
            {
                "tinbronze",
                new()
                {
                    DecayMultiplier = 0.9f,
                    AvgLifeSpanInYears = 3f
                }
            },
            {
                "bismuthbronze",
                new()
                {
                    DecayMultiplier = 0.85f,
                    AvgLifeSpanInYears = 3.3f
                }
            },
            {
                "blackbronze",
                new()
                {
                    DecayMultiplier = 0.8f,
                    AvgLifeSpanInYears = 3.6f
                }
            },
            {
                "iron",
                new()
                {
                    DecayMultiplier = 0.7f,
                    AvgLifeSpanInYears = 4f
                }
            },
            {
                "meteoriciron",
                new()
                {
                    DecayMultiplier = 0.6f,
                    AvgLifeSpanInYears = 4.5f
                }
            },
            {
                "steel",
                new()
                {
                    //Not entirely realistic but it promotes making variants of better metals
                    DecayMultiplier = 0.5f,
                    AvgLifeSpanInYears = 5f
                }
            }
        };
    }
}